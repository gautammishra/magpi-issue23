Grove Pi – Stackable hardware for the Raspberry PiThe Grove Pi is a stackable add-on hardware for the Raspberry Pi. The Grove Pi simplifies the art of electronic circuit hacking since it comes with an onboard microcontroller. The Grove Pi enables interfacing the Raspberry Pi to an ecosystem of modules including sensors, actuators and displays. The board comes with analog inputs, digital I/O and I2C interfaces. The modules are called “electronic bricks” designed for interface with the Arduino and makes prototyping using the Raspberry Pi easier. Figure 1 Grove Pi stacked on the Raspberry Pi - Source: Dexter IndustriesThe GrovePi library can be downloaded from: https://github.com/DexterInd/GrovePi. The dependencies for the Grove Pi can be installed using a script available in the ‘Script’ directory of the GrovePi library and the library could be used upon reboot. A simple test for the library is the LED blinking example:import timeimport grovepigrovepi.pinMode(7,"OUTPUT")time.sleep(1)while True:    try:        grovepi.digitalWrite(7,1)        time.sleep(1)        grovepi.digitalWrite(7,0)        time.sleep(1)    except IOError:        print "Error"We get started by importing the grovepi module. We set the pin 7 as output. grovepi.pinMode(7,"OUTPUT")The function calls of the library are similar to that of the Arduino libraries. We should able to blink an LED by setting the pin 7 to high and low alternatively. Another example is a datalogger application using an air quality sensor module and a real time clock module. The application reads the current time from the RTC module and displays it on the GUI. The sensor value is written to a text file along with the time into a text file. This application makes use of the Tkinter GUI toolkit to implement a simple user interface. The Tkinter object is initialized and two button widgets are added. One button widget called Sensor button is used to record the analog value from the air quality sensor along with the time read from the RTC module. A callback function called ‘Analog’ is registered with the button.The other button ‘Exit’ terminates the application and destroys the window. We use the Label widget to update the time using the RTC module. The function call rtc_getTime() returns an 8 byte array containing the date and time information. This is set as text in the Label widget. The text is updated every second using the tk widget’s method ‘after’.         tk.after(1000,Display_Time)When we put everything together, the GUI looks something like this:The application logs data as follows:06:09:56 Sensor value: 260Conclusion:The GrovePi is a board that brings together the Arduino’s capabilities to the Raspberry Pi by enabling the interface of the Grove modules to the Raspberry Pi. More examples for the Grove Pi are available at: http://www.dexterindustries.com/GrovePi/projects-for-the-raspberry-pi/. The sensor documentation also explains writing a method for the interface of a new module. The python script available at: https://github.com/yamanoorsai/GrovePi_TestReference: Meltwater’s Tkinter tutorial:http://pihw.wordpress.com/lessons/rgb-led-lesson-5-creating-a-graphical-user-interface/